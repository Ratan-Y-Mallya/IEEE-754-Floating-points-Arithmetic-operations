$date
	Sat Jan 18 23:27:15 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module divider_tb $end
$var wire 32 ! final [31:0] $end
$var reg 32 " in1 [31:0] $end
$var reg 32 # in2 [31:0] $end
$scope module dut $end
$var wire 32 $ in1 [31:0] $end
$var wire 32 % in2 [31:0] $end
$var wire 1 & s2 $end
$var wire 1 ' s1 $end
$var wire 48 ( multi [47:0] $end
$var wire 32 ) final [31:0] $end
$var wire 9 * eigth_bit_sub [8:0] $end
$var wire 1 + eigth_bit_add $end
$var wire 23 , M2 [22:0] $end
$var wire 23 - M1 [22:0] $end
$var wire 8 . E2 [7:0] $end
$var wire 8 / E1 [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1111111 /
b10000000 .
b0 -
b0 ,
0+
b11111111 *
b0 )
b0 (
0'
0&
b1000000000000000000000000000000 %
b111111100000000000000000000000 $
b1000000000000000000000000000000 #
b111111100000000000000000000000 "
b0 !
$end
#10
1+
b10000000100000000000000000000000 !
b10000000100000000000000000000000 )
b100000000 *
b10000000 /
1'
b11000000000000000000000000000000 "
b11000000000000000000000000000000 $
#20
b100000000000000000000000 !
b100000000000000000000000 )
b100000000000000000000000000000000000000000000 (
b10000000000000000000000 ,
b10000000000000000000000 -
0'
b1000000010000000000000000000000 #
b1000000010000000000000000000000 %
b1000000010000000000000000000000 "
b1000000010000000000000000000000 $
#30
b0 !
b0 )
0+
b0 ,
b0 .
b0 (
b0 -
b1111111 *
b1111111 /
b0 #
b0 %
b111111100000000000000000000000 "
b111111100000000000000000000000 $
#40
b100000000000000000000000 !
b100000000000000000000000 )
1+
b1111111 .
b101111110 *
b11111111 /
b111111100000000000000000000000 #
b111111100000000000000000000000 %
b1111111100000000000000000000000 "
b1111111100000000000000000000000 $
#50
b111111110 *
b11111111 .
b1111111100000000000000000000000 #
b1111111100000000000000000000000 %
#60
b10000000100000000000000000000000 !
b10000000100000000000000000000000 )
1&
b11111111100000000000000000000000 #
b11111111100000000000000000000000 %
#70
b101111110 *
b1111111 .
0&
b11111111111111111111111 -
1'
b111111100000000000000000000000 #
b111111100000000000000000000000 %
b11111111111111111111111111111111 "
b11111111111111111111111111111111 $
#80
